# JMH version: 1.21
# VM version: JDK 1.8.0_131, Java HotSpot(TM) 64-Bit Server VM, 25.131-b11
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=62915:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.smxknife.log.log4j.demo02.PerformLogTest.test
# Parameters: (loopNum = 100)

# Run progress: 0.00% complete, ETA 00:05:00
# Fork: 1 of 1
objc[22660]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java (0x1040684c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x10508f4e0). One of the two will be used. Which one is undefined.
# Warmup Iteration   1: 1.037 ms/op
# Warmup Iteration   2: 0.947 ms/op
# Warmup Iteration   3: 0.940 ms/op
# Warmup Iteration   4: 0.951 ms/op
# Warmup Iteration   5: 1.030 ms/op
Iteration   1: 1.075 ms/op
Iteration   2: 0.960 ms/op
Iteration   3: 1.113 ms/op
Iteration   4: 1.006 ms/op
Iteration   5: 1.193 ms/op


Result "com.smxknife.log.log4j.demo02.PerformLogTest.test":
  1.069 ±(99.9%) 0.350 ms/op [Average]
  (min, avg, max) = (0.960, 1.069, 1.193), stdev = 0.091
  CI (99.9%): [0.720, 1.419] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_131, Java HotSpot(TM) 64-Bit Server VM, 25.131-b11
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=62915:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.smxknife.log.log4j.demo02.PerformLogTest.test
# Parameters: (loopNum = 1000)

# Run progress: 33.33% complete, ETA 00:03:22
# Fork: 1 of 1
objc[22672]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java (0x1041394c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x1041bd4e0). One of the two will be used. Which one is undefined.
# Warmup Iteration   1: 10.932 ms/op
# Warmup Iteration   2: 9.604 ms/op
# Warmup Iteration   3: 9.927 ms/op
# Warmup Iteration   4: 9.367 ms/op
# Warmup Iteration   5: 9.306 ms/op
Iteration   1: 12.668 ms/op
Iteration   2: 9.018 ms/op
Iteration   3: 9.636 ms/op
Iteration   4: 10.366 ms/op
Iteration   5: 11.104 ms/op


Result "com.smxknife.log.log4j.demo02.PerformLogTest.test":
  10.558 ±(99.9%) 5.448 ms/op [Average]
  (min, avg, max) = (9.018, 10.558, 12.668), stdev = 1.415
  CI (99.9%): [5.110, 16.006] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_131, Java HotSpot(TM) 64-Bit Server VM, 25.131-b11
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=62915:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.smxknife.log.log4j.demo02.PerformLogTest.test
# Parameters: (loopNum = 10000)

# Run progress: 66.67% complete, ETA 00:01:41
# Fork: 1 of 1
objc[22686]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java (0x1013354c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x1013b94e0). One of the two will be used. Which one is undefined.
# Warmup Iteration   1: 118.441 ms/op
# Warmup Iteration   2: 98.143 ms/op
# Warmup Iteration   3: 98.232 ms/op
# Warmup Iteration   4: 96.222 ms/op
# Warmup Iteration   5: 104.837 ms/op
Iteration   1: 98.814 ms/op
Iteration   2: 98.431 ms/op
Iteration   3: 89.788 ms/op
Iteration   4: 90.497 ms/op
Iteration   5: 87.834 ms/op


Result "com.smxknife.log.log4j.demo02.PerformLogTest.test":
  93.073 ±(99.9%) 19.872 ms/op [Average]
  (min, avg, max) = (87.834, 93.073, 98.814), stdev = 5.161
  CI (99.9%): [73.200, 112.945] (assumes normal distribution)


# Run complete. Total time: 00:05:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark            (loopNum)  Mode  Cnt   Score    Error  Units
PerformLogTest.test        100  avgt    5   1.069 ±  0.350  ms/op
PerformLogTest.test       1000  avgt    5  10.558 ±  5.448  ms/op
PerformLogTest.test      10000  avgt    5  93.073 ± 19.872  ms/op
