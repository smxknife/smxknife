# JMH version: 1.21
# VM version: JDK 1.8.0_131, Java HotSpot(TM) 64-Bit Server VM, 25.131-b11
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=61888:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.smxknife.log.java.demo03.PerformLogTest.test
# Parameters: (loopNum = 100)

# Run progress: 0.00% complete, ETA 00:05:00
# Fork: 1 of 1
objc[21494]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java (0x1080c04c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x1081444e0). One of the two will be used. Which one is undefined.
# Warmup Iteration   1: 2.277 ms/op
# Warmup Iteration   2: 2.227 ms/op
# Warmup Iteration   3: 2.372 ms/op
# Warmup Iteration   4: 2.827 ms/op
# Warmup Iteration   5: 2.907 ms/op
Iteration   1: 2.541 ms/op
Iteration   2: 2.209 ms/op
Iteration   3: 2.334 ms/op
Iteration   4: 2.171 ms/op
Iteration   5: 2.661 ms/op


Result "com.smxknife.log.java.demo03.PerformLogTest.test":
  2.383 ±(99.9%) 0.818 ms/op [Average]
  (min, avg, max) = (2.171, 2.383, 2.661), stdev = 0.212
  CI (99.9%): [1.565, 3.201] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_131, Java HotSpot(TM) 64-Bit Server VM, 25.131-b11
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=61888:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.smxknife.log.java.demo03.PerformLogTest.test
# Parameters: (loopNum = 1000)

# Run progress: 33.33% complete, ETA 00:03:23
# Fork: 1 of 1
objc[21506]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java (0x105ad64c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x106afd4e0). One of the two will be used. Which one is undefined.
# Warmup Iteration   1: 24.179 ms/op
# Warmup Iteration   2: 22.532 ms/op
# Warmup Iteration   3: 22.068 ms/op
# Warmup Iteration   4: 22.114 ms/op
# Warmup Iteration   5: 22.972 ms/op
Iteration   1: 23.085 ms/op
Iteration   2: 24.449 ms/op
Iteration   3: 25.080 ms/op
Iteration   4: 22.185 ms/op
Iteration   5: 21.586 ms/op


Result "com.smxknife.log.java.demo03.PerformLogTest.test":
  23.277 ±(99.9%) 5.684 ms/op [Average]
  (min, avg, max) = (21.586, 23.277, 25.080), stdev = 1.476
  CI (99.9%): [17.593, 28.961] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_131, Java HotSpot(TM) 64-Bit Server VM, 25.131-b11
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=61888:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.smxknife.log.java.demo03.PerformLogTest.test
# Parameters: (loopNum = 10000)

# Run progress: 66.67% complete, ETA 00:01:41
# Fork: 1 of 1
objc[21518]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java (0x108e894c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x108f0d4e0). One of the two will be used. Which one is undefined.
# Warmup Iteration   1: 216.845 ms/op
# Warmup Iteration   2: 208.708 ms/op
# Warmup Iteration   3: 235.764 ms/op
# Warmup Iteration   4: 226.057 ms/op
# Warmup Iteration   5: 220.595 ms/op
Iteration   1: 220.094 ms/op
Iteration   2: 233.769 ms/op
Iteration   3: 238.680 ms/op
Iteration   4: 228.837 ms/op
Iteration   5: 222.492 ms/op


Result "com.smxknife.log.java.demo03.PerformLogTest.test":
  228.775 ±(99.9%) 29.695 ms/op [Average]
  (min, avg, max) = (220.094, 228.775, 238.680), stdev = 7.712
  CI (99.9%): [199.079, 258.470] (assumes normal distribution)


# Run complete. Total time: 00:05:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark            (loopNum)  Mode  Cnt    Score    Error  Units
PerformLogTest.test        100  avgt    5    2.383 ±  0.818  ms/op
PerformLogTest.test       1000  avgt    5   23.277 ±  5.684  ms/op
PerformLogTest.test      10000  avgt    5  228.775 ± 29.695  ms/op
