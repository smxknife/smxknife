# JMH version: 1.21
# VM version: JDK 1.8.0_131, Java HotSpot(TM) 64-Bit Server VM, 25.131-b11
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=56450:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.smxknife.log.java.demo03.PerformLogTest.test

# Run progress: 0.00% complete, ETA 00:05:00
# Fork: 1 of 1
objc[9137]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java (0x100bd24c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x1024194e0). One of the two will be used. Which one is undefined.
# Warmup Iteration   1: 0.041 ops/ms
# Warmup Iteration   2: 0.041 ops/ms
# Warmup Iteration   3: 0.034 ops/ms
# Warmup Iteration   4: 0.032 ops/ms
# Warmup Iteration   5: 0.034 ops/ms
Iteration   1: 0.035 ops/ms # 可以简单理解为每毫秒执行了0.035次
Iteration   2: 0.035 ops/ms
Iteration   3: 0.038 ops/ms
Iteration   4: 0.044 ops/ms
Iteration   5: 0.040 ops/ms


Result "com.smxknife.log.java.demo03.PerformLogTest.test":
  0.039 ±(99.9%) 0.015 ops/ms [Average]
  (min, avg, max) = (0.035, 0.039, 0.044), stdev = 0.004
  CI (99.9%): [0.024, 0.053] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_131, Java HotSpot(TM) 64-Bit Server VM, 25.131-b11
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=56450:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.smxknife.log.java.demo03.PerformLogTest.test

# Run progress: 33.33% complete, ETA 00:03:22
# Fork: 1 of 1
objc[9167]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java (0x100cc04c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x100d444e0). One of the two will be used. Which one is undefined.
# Warmup Iteration   1: 23.736 ms/op
# Warmup Iteration   2: 25.129 ms/op
# Warmup Iteration   3: 23.681 ms/op
# Warmup Iteration   4: 25.208 ms/op
# Warmup Iteration   5: 26.601 ms/op
Iteration   1: 29.660 ms/op
Iteration   2: 24.248 ms/op
Iteration   3: 26.086 ms/op
Iteration   4: 28.830 ms/op
Iteration   5: 23.413 ms/op


Result "com.smxknife.log.java.demo03.PerformLogTest.test":
  26.447 ±(99.9%) 10.576 ms/op [Average]
  (min, avg, max) = (23.413, 26.447, 29.660), stdev = 2.747
  CI (99.9%): [15.871, 37.024] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_131, Java HotSpot(TM) 64-Bit Server VM, 25.131-b11
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=56450:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.smxknife.log.java.demo03.PerformLogTest.test

# Run progress: 66.66% complete, ETA 00:01:41
# Fork: 1 of 1
objc[9181]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java (0x1038b04c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x1039344e0). One of the two will be used. Which one is undefined.
# Warmup Iteration   1: 24.451 ±(99.9%) 0.796 ms/op
# Warmup Iteration   2: 23.508 ±(99.9%) 0.627 ms/op
# Warmup Iteration   3: 23.270 ±(99.9%) 0.487 ms/op
# Warmup Iteration   4: 23.506 ±(99.9%) 0.575 ms/op
# Warmup Iteration   5: 24.073 ±(99.9%) 0.676 ms/op
Iteration   1: 25.700 ±(99.9%) 1.700 ms/op
                 test·p0.00:   19.464 ms/op
                 test·p0.50:   22.249 ms/op
                 test·p0.90:   32.755 ms/op
                 test·p0.95:   37.896 ms/op
                 test·p0.99:   72.672 ms/op
                 test·p0.999:  148.374 ms/op
                 test·p0.9999: 148.374 ms/op
                 test·p1.00:   148.374 ms/op

Iteration   2: 29.549 ±(99.9%) 3.189 ms/op
                 test·p0.00:   19.661 ms/op
                 test·p0.50:   23.593 ms/op
                 test·p0.90:   41.419 ms/op
                 test·p0.95:   61.211 ms/op
                 test·p0.99:   121.792 ms/op
                 test·p0.999:  145.228 ms/op
                 test·p0.9999: 145.228 ms/op
                 test·p1.00:   145.228 ms/op

Iteration   3: 24.915 ±(99.9%) 1.376 ms/op
                 test·p0.00:   19.759 ms/op
                 test·p0.50:   23.069 ms/op
                 test·p0.90:   29.701 ms/op
                 test·p0.95:   37.041 ms/op
                 test·p0.99:   63.204 ms/op
                 test·p0.999:  135.528 ms/op
                 test·p0.9999: 135.528 ms/op
                 test·p1.00:   135.528 ms/op

Iteration   4: 31.192 ±(99.9%) 3.909 ms/op
                 test·p0.00:   19.628 ms/op
                 test·p0.50:   23.790 ms/op
                 test·p0.90:   44.538 ms/op
                 test·p0.95:   79.875 ms/op
                 test·p0.99:   130.763 ms/op
                 test·p0.999:  202.637 ms/op
                 test·p0.9999: 202.637 ms/op
                 test·p1.00:   202.637 ms/op

Iteration   5: 26.692 ±(99.9%) 2.112 ms/op
                 test·p0.00:   19.890 ms/op
                 test·p0.50:   23.331 ms/op
                 test·p0.90:   33.096 ms/op
                 test·p0.95:   44.879 ms/op
                 test·p0.99:   97.885 ms/op
                 test·p0.999:  131.727 ms/op
                 test·p0.9999: 131.727 ms/op
                 test·p1.00:   131.727 ms/op



Result "com.smxknife.log.java.demo03.PerformLogTest.test":
  N = 1827
  mean =     27.410 ±(99.9%) 1.116 ms/op

  Histogram, ms/op:
    [  0.000,  25.000) = 1236
    [ 25.000,  50.000) = 512
    [ 50.000,  75.000) = 35
    [ 75.000, 100.000) = 27
    [100.000, 125.000) = 9
    [125.000, 150.000) = 6
    [150.000, 175.000) = 1
    [175.000, 200.000) = 0
    [200.000, 225.000) = 1
    [225.000, 250.000) = 0
    [250.000, 275.000) = 0

  Percentiles, ms/op:
      p(0.0000) =     19.464 ms/op
     p(50.0000) =     23.233 ms/op
     p(90.0000) =     35.481 ms/op
     p(95.0000) =     45.023 ms/op
     p(99.0000) =     99.143 ms/op
     p(99.9000) =    162.699 ms/op
     p(99.9900) =    202.637 ms/op
     p(99.9990) =    202.637 ms/op
     p(99.9999) =    202.637 ms/op
    p(100.0000) =    202.637 ms/op


# JMH version: 1.21
# VM version: JDK 1.8.0_131, Java HotSpot(TM) 64-Bit Server VM, 25.131-b11
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=56450:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, single-shot each
# Measurement: 5 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.smxknife.log.java.demo03.PerformLogTest.test

# Run progress: 100.00% complete, ETA 00:00:00
# Fork: 1 of 1
objc[9196]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/bin/java (0x100f984c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x100fe74e0). One of the two will be used. Which one is undefined.
# Warmup Iteration   1: 72.210 ms/op
# Warmup Iteration   2: 40.165 ms/op
# Warmup Iteration   3: 36.458 ms/op
# Warmup Iteration   4: 44.657 ms/op
# Warmup Iteration   5: 28.123 ms/op
Iteration   1: 30.158 ms/op
Iteration   2: 39.099 ms/op
Iteration   3: 35.524 ms/op
Iteration   4: 38.284 ms/op
Iteration   5: 39.117 ms/op


Result "com.smxknife.log.java.demo03.PerformLogTest.test":
  N = 5
  mean =     36.436 ±(99.9%) 14.654 ms/op

  Histogram, ms/op:
    [30.000, 31.000) = 1
    [31.000, 32.000) = 0
    [32.000, 33.000) = 0
    [33.000, 34.000) = 0
    [34.000, 35.000) = 0
    [35.000, 36.000) = 1
    [36.000, 37.000) = 0
    [37.000, 38.000) = 0
    [38.000, 39.000) = 1

  Percentiles, ms/op:
      p(0.0000) =     30.158 ms/op
     p(50.0000) =     38.284 ms/op
     p(90.0000) =     39.117 ms/op
     p(95.0000) =     39.117 ms/op
     p(99.0000) =     39.117 ms/op
     p(99.9000) =     39.117 ms/op
     p(99.9900) =     39.117 ms/op
     p(99.9990) =     39.117 ms/op
     p(99.9999) =     39.117 ms/op
    p(100.0000) =     39.117 ms/op


# Run complete. Total time: 00:05:05

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode   Cnt    Score    Error   Units
PerformLogTest.test                thrpt     5    0.039 ±  0.015  ops/ms
PerformLogTest.test                 avgt     5   26.447 ± 10.576   ms/op
PerformLogTest.test               sample  1827   27.410 ±  1.116   ms/op
PerformLogTest.test:test·p0.00    sample         19.464            ms/op
PerformLogTest.test:test·p0.50    sample         23.233            ms/op
PerformLogTest.test:test·p0.90    sample         35.481            ms/op
PerformLogTest.test:test·p0.95    sample         45.023            ms/op
PerformLogTest.test:test·p0.99    sample         99.143            ms/op
PerformLogTest.test:test·p0.999   sample        162.699            ms/op
PerformLogTest.test:test·p0.9999  sample        202.637            ms/op
PerformLogTest.test:test·p1.00    sample        202.637            ms/op
PerformLogTest.test                   ss     5   36.436 ± 14.654   ms/op
