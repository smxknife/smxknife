Main 1;     # 简单指令，<名称><空格><参数><分号> 这四部分组成
events {}   # 指令块，<名称><大括号及附加指令>
http {      # http块为全局参数，http之前的配置是全局参数，与客户端有关的配置主要在http块中设置
    Main 2;

    # 客户端配置常用指令如下 --------
    # client_body_buffer_size 16K;      # 设置读取客户端请求体的缓冲区大小。如果请求体大小大于该值，则整个或一部分请求体会被写入临时文件。默认32位和x86-64是8k，其他64位16k
    # client_body_temp_path /tmp;       # 定义存储客户端请求体的临时文件目录，最多可以定义3个子集目录
    # client_body_timeout ;             # 定义读取客户端请求体的超时时间，即两个连续的读操作之间的时间间隔。如果超时HTTP抛出408错误
    # client_header_buffer_size 1K;     # 设置客户端请求头的缓冲区大小，默认1k
    # client_max_body_size 1M;          # 设置客户端请求最大主题的大小，默认1M
    # client_header_timeout ;           # 设置客户端请求头超时时间
    # etag ;                            # 如果设置为on，表示静态资源自动生成ETag响应头
    # large_client_header_buffers ;     # 设置大型客户端请求头的缓冲区大小
    # keepalive_timeout ;               # 设置连接超时时间。服务器将在超过超时时间后关闭HTTP连接
    # send_timeout ;                    # 指定客户端的响应超时时间
    # server_names_hash_bucket_size ;   # 设置server_names（Nginx中配置的全部域名）散列表的桶的大小，默认值取决于处理器缓存行的大小
    # server_names_hash_max_size ;      # 设置server_names散列表的最大值
    # server_tokens ;                   # 启用或禁止在错误页面和服务器响应头部字段中表示nginx版本
    # tcp_nodelay ;                     # 启用或禁止TCP_NODELAY选项。只有当连接保持活动时，才会占用
    # tcp_nopush ;                      # 仅当sendfile时使用，能够将响应头和正文的开始部分一起发送
    # 客户端配置常用指令 -----------

    expires 1d;
    server {            # server块为虚拟主机，对指定的主机和端口进行配置
        Main 3;

        # server_name testnginx.com www.testnginx.com; # 如果请求头中的Host头和server_name相匹配，则将请求指向对应的server块;
                                                       # server_name支持使用通配符正则表达式，支持配置多域名、服务名称
                                                       # 当存在多个server块时，存在匹配优先级问题，顺序如下：
                                                       #    > 1. 精确的名字
                                                       #    > 2. 以*开头的最长通配符名称，如*.testnginx.com;
                                                       #    > 3. 以*结尾的最长通配符名称，如testnginx.*;
                                                       #    > 4. 按照文件顺序，第一个匹配到的正则表达式
                                                       #    > 4. 如果没有匹配到对应的server_name，则会访问default_server

        location / {        # location块在虚拟主机下根据请求URI进行配置
                            # URL在location中的匹配规则如下：
                            #   > location = /uri | = 表示精确匹配
                            #   > location ^~/uri | ^~匹配以某个URL前缀开头的请求，不支持正则表达式
                            #   > location ~      | ~区分大小写的匹配，支持正则表达式
                            #   > location ~*     | ~*不区分大小写的匹配，支持正则表达式
                            #   > location /uri   | 表示前缀匹配，不带修饰符，但是优先级没有正则表达式高
                            #   > location /      | 通用匹配，默认找不到其他匹配时，会进行通用匹配
                            #   > location @      | 命名空间，不提供常规的请求匹配
                            # 匹配优先级从上到下，如果找不到，就会找通用匹配；@表示命名空间位置，通常在重定向时进行匹配，且不会该表URL的原始请求
            expires 1m;     # 这里的expires简单指令将覆盖http块中的expires的简单指令

            location /a {}
            location /a/b {}
        }
    }
}