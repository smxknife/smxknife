
user  root root;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       10801;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        # 动态切图
        location ~* ^/(.+)\.(\d+|-)x(\d+|-)\.(gif|png|webp|jpg)$ {
        	set $w $2; # 获取匹配URL中的字符，值设为宽
        	set $h $3; # 获取匹配URL中的字符，值设为高
        	image_filter resize $w $h;
        	image_filter_buffer 3M; # 读取原始图片的最大值
        	try_files /$1.$4 /404.jpg; # 在硬盘中读取文件时，如果读取不到，读取404.jpg
        	root /storage/tmp;
        }

		location ~* /img {
			#expires -1;
			add_header Cache-Control no-store;
    		#image_filter resize 150 200;
    		#image_filter crop 150 100;
    		image_filter rotate 180;
    		#image_filter size;
    		#image_filter test;
    		image_filter_interlace on;
			root /storage/tmp;
		}

		location / {
            root   /storage/tmp;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /storage/tmp;
        }

}
